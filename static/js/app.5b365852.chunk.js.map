{"version":3,"sources":["RootNavigation.js","components/BgImg.js","screens/Activity.js","screens/Home.js","components/ResultFeedback.js","screens/ActivityResult.js","screens/Joke.js","screens/JokeResult.js","App.js"],"names":["navigationRef","createNavigationContainerRef","navigate","name","params","isReady","windowWidth","Dimensions","get","width","windowHeight","height","bgImg","uri","BgImg","Image","source","style","styles","StyleSheet","create","position","minWidth","minHeight","resizeMode","zIndex","Activity","navigation","useState","value","setValue","participants","setParticipants","pay","setPay","View","container","qBox","marginTop","Text","display","flex","flexDirection","justifyContent","alignItems","TouchableOpacity","onPress","backgroundColor","padding","fontSize","toFixed","onValueChange","minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","RadioButton","Group","newValue","Item","label","color","accessibility","people","money","btn","btnTxt","maxHeight","alignSelf","borderWidth","borderColor","shadowColor","paddingVertical","paddingHorizontal","fontWeight","borderRadius","marginVertical","Home","whiteBox","boredBox","bored","questionBox","question","desc","margin","textAlign","marginBottom","paddingBottom","ResultFeedback","noVisibleAlert","setNoVisibleAlert","yesVisibleAlert","setYesVisibleAlert","title","marginRight","isVisible","lineHeight","paddingTop","RootNavigation","overBtn","overBtnTxt","marginLeft","ActivityResult","route","JSON","stringify","replace","slice","error","setError","isLoaded","setIsLoaded","dataResult","setDataResult","useEffect","fetch","then","res","json","result","displayActivity","message","undefined","activityContainer","activity","ActivityIndicator","size","type","item","id","banned","Joke","genres","setGenres","blacklisted","setBlacklisted","onGenreChange","xorBy","onBlacklistChange","select","options","selectedValues","inputPlaceholder","onMultiSelect","onTapClose","isMulti","hideInputFilter","containerStyle","paddingLeft","labelStyle","multiListEmptyLabelStyle","multiOptionContainerStyle","arrowIconColor","searchIconColor","toggleIconColor","optionsLabelStyle","JokeResult","genre","blacklist","parse","category","Object","values","exclude","categories","excluded","entries","i","len","length","substring","displayJoke","h3","h1","txtBox","setup","delivery","marginHorizontal","Stack","createStackNavigator","logoImg","App","NavigationContainer","ref","Navigator","Screen","component","headerTitleAlign","headerTitle","props","LogoTitle","headerStyle","headerTintColor","alt","className"],"mappings":"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","file":"static/js/app.5b365852.chunk.js","sourcesContent":["import { createNavigationContainerRef } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createNavigationContainerRef()\r\n\r\nexport function navigate(name, params) {\r\n  if (navigationRef.isReady()) {\r\n    navigationRef.navigate(name, params);\r\n  }\r\n}","\r\nimport { StyleSheet, Image, Dimensions} from \"react-native\";\r\n\r\n// Make sure background image covers entire view-width and height\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst windowHeight = Dimensions.get('window').height;\r\nconst bgImg = {uri: \"https://i.ibb.co/jRhR5gH/bg.jpg\"};\r\n\r\n\r\nexport default function BgImg() {\r\n    return(\r\n        <Image source={bgImg} style={styles.bgImg} />\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    bgImg: {\r\n        position:'absolute',\r\n        minWidth:windowWidth,\r\n        minHeight: windowHeight,\r\n        resizeMode:'cover',\r\n        zIndex:-1\r\n    },\r\n})","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { View, Text, StyleSheet,TouchableOpacity } from \"react-native\";\r\n\r\n// Accessibility\r\nimport Slider from '@react-native-community/slider';\r\n\r\n// Pay \r\nimport { RadioButton } from 'react-native-paper';\r\n\r\n// Background Image\r\nimport BgImg from \"../components/BgImg\";\r\n\r\n\r\nexport default function Activity({navigation}) {\r\n    // Accessibility slider value\r\n    const [value, setValue] = useState(0);\r\n\r\n    // Participants quantity\r\n    const [participants, setParticipants] = useState(1);\r\n\r\n    // Pay: Yes or no\r\n    const [pay, setPay] = useState(0);\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n        <BgImg />\r\n\r\n            <View style={[styles.qBox, {marginTop: 20}]}>\r\n                <Text>How many people will be participating?</Text>\r\n                <View style={{display:'flex', flex:1, flexDirection:'row',justifyContent:'center', alignItems:'center'}}>\r\n                    <TouchableOpacity\r\n                        onPress={() =>{\r\n                            if(participants <= 1){\r\n                                setParticipants(participants + 0);\r\n                            }else{\r\n                                setParticipants(participants -1);\r\n                            };}}\r\n                        style={{height:30,width:30,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',backgroundColor:'#fff'}}\r\n                    >\r\n                        <Text>-</Text>\r\n                    </TouchableOpacity>\r\n                    <Text style={{padding:15}}>{participants}</Text>\r\n                    <TouchableOpacity\r\n                        onPress={() =>setParticipants(participants+1)}\r\n                        style={{height:30,width:30,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center', backgroundColor:'#fff'}}\r\n                    >\r\n                        <Text>+</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.qBox}>\r\n                <Text>How accessible do you need the activity to be?</Text>\r\n                <Text style={{fontSize:10}}>(Physical limitations, equipment, travel-time, etc.)</Text>\r\n                <View style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                    <Text style={{marginTop:10}}>{(value*10).toFixed(1)}/10</Text>\r\n                    <Slider\r\n                    onValueChange={value => setValue(value)}\r\n                    style={{width: 200, height: 40}}\r\n                    minimumValue={0}\r\n                    maximumValue={1}\r\n                    minimumTrackTintColor=\"#ff5c5c\"\r\n                    maximumTrackTintColor=\"#fcba03\"\r\n                    thumbTintColor=\"#d63131\"\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.qBox}>\r\n                <Text>Are you okay with spending money?</Text>\r\n                <RadioButton.Group onValueChange={newValue => setPay(newValue)} value={pay}>\r\n                    <RadioButton.Item value=\"1\" label=\"Yes\" color=\"#ff5c5c\" />\r\n              \r\n                    <RadioButton.Item value=\"0\" label=\"No\" color=\"#fcba03\" />\r\n            \r\n                </RadioButton.Group>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n                onPress={()=>\r\n                    navigation.navigate(\r\n                        'ActivityResult', \r\n                        {accessibility:{value}, \r\n                        people:{participants}, \r\n                        money:{pay}})} \r\n                style={styles.btn}\r\n            >\r\n                <Text style={styles.btnTxt}>Continue</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    btn: {\r\n        flex:1,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop:20,\r\n        width:180,\r\n        maxHeight:90,\r\n        alignSelf:'center',\r\n        borderWidth:5,\r\n        borderColor:'#ff5c5c',\r\n        shadowColor: \"black\",\r\n        backgroundColor:'#ff5c5c',\r\n    },\r\n    btnTxt: {\r\n        fontSize: 28,\r\n        paddingVertical:10,\r\n        paddingHorizontal:20,\r\n        fontWeight:\"700\",\r\n        color:'#fff'\r\n    },\r\n    qBox: {\r\n        backgroundColor:'#ffd0d0',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        padding:20,\r\n        width:'90%',\r\n        height:160,\r\n        borderRadius:20,\r\n        marginVertical:5,\r\n    }\r\n  });","import React from \"react\";\r\nimport { View, StyleSheet,Text, TouchableOpacity } from \"react-native\";\r\n\r\n// background image component\r\nimport BgImg from \"../components/BgImg\";\r\n\r\n\r\nexport default function Home({navigation}) {\r\n    return(\r\n\r\n        <View style={styles.container}>\r\n        <BgImg />\r\n            <View style={styles.whiteBox}>\r\n                <View style={styles.boredBox}>\r\n                    <Text style={styles.bored}>Bored?</Text>\r\n                </View>\r\n\r\n                <View style={styles.questionBox}>\r\n                    <Text style={styles.question}>Don't know what to do?</Text>\r\n                    <Text style={styles.desc}>Try this simple app that can help with that!</Text>\r\n                </View>\r\n            </View>\r\n                <TouchableOpacity\r\n                    onPress={()=>navigation.navigate('Activity')} \r\n                    style={[styles.btn]}>\r\n                        <Text style={styles.btnTxt}>Start</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor:'#ffd0d0',\r\n      paddingHorizontal:20,\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      alignItems:'center'\r\n    },\r\n    bored: {\r\n        fontSize:26,\r\n        margin:10,\r\n        fontWeight:'700',\r\n        color:'#ff5c5c'\r\n\r\n    },\r\n    question:{\r\n        textAlign:'center',\r\n        fontSize:18,\r\n        color:'#d63131'\r\n    },\r\n    whiteBox: {\r\n        backgroundColor:'#ffd0d0',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        marginTop:150,\r\n        justifyContent:'center',\r\n        paddingHorizontal:30,\r\n        borderWidth:1,\r\n        borderColor:'#d63131',\r\n        borderRadius:30\r\n    },\r\n    questionBox:{\r\n        marginBottom:20,\r\n        paddingBottom:20,\r\n    },\r\n    boredBox: {\r\n        marginTop:20,\r\n    },\r\n    btn: {\r\n        flex:1,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop:40,\r\n        width:180,\r\n        maxHeight:60,\r\n        alignSelf:'center',\r\n        borderWidth:5,\r\n        borderColor:'#ff5c5c',\r\n        shadowColor: \"black\",\r\n        backgroundColor:'#ff5c5c',\r\n    },\r\n    btnTxt: {\r\n        fontSize: 33,\r\n        padding:10,\r\n        fontWeight:\"700\",\r\n        color:'#fff'\r\n    },\r\n    desc: {\r\n        textAlign:'center',\r\n        color:'#ff5c5c'\r\n    }\r\n\r\n\r\n  });","import { useState } from \"react\";\r\nimport { Text, Overlay, FAB, Icon } from \"react-native-elements\";\r\nimport { TouchableOpacity,StyleSheet } from \"react-native\";\r\nimport { View } from \"react-native\";\r\nimport * as RootNavigation from '../RootNavigation';\r\n\r\nexport default function ResultFeedback() {\r\n    const [noVisibleAlert, setNoVisibleAlert] = useState(false);\r\n    const [yesVisibleAlert, setYesVisibleAlert] = useState(false);\r\n    return(\r\n        <View style={{marginTop:10}}>\r\n          <Text style={styles.question}>Are you happy with this result?</Text>\r\n            <View style={{display:'flex', flexDirection:'row', justifyContent:'space-between',}}>\r\n                <TouchableOpacity \r\n                    title=\"No\"\r\n                    onPress={()=> setNoVisibleAlert(true)}\r\n                    style={[styles.btn,{width:10, marginRight:7}]}\r\n                >\r\n                    <Text style={styles.btnTxt}>No</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity \r\n                    title=\"Yes\"\r\n                    onPress={()=> setYesVisibleAlert(true)}\r\n                    style={[styles.btn,{width:10, marginRight:7}]}\r\n                >\r\n                    <Text style={styles.btnTxt}>Yes</Text>\r\n                </TouchableOpacity>  \r\n            </View>\r\n            <Overlay isVisible={noVisibleAlert} style={{paddingHorizontal:10, paddingVertical:20}}>\r\n                <Text style={{lineHeight:1.8, fontSize:26, fontWeight:\"500\",paddingTop:30, paddingBottom:10}}>Sorry!</Text>\r\n                <Text style={{paddingTop:10,paddingBottom:20}}>\r\n                    Do you want to hear a joke instead?\r\n                </Text>\r\n                <View style={{display:'flex',flexDirection:'row', justifyContent:'space-between'}}>\r\n                    <TouchableOpacity\r\n                        onPress={() => {RootNavigation.navigate('Home'); setNoVisibleAlert(false);}}\r\n                        style={[styles.overBtn, {marginRight:5}]}\r\n                    >\r\n                        <Text style={styles.overBtnTxt}>No</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        onPress={() => {RootNavigation.navigate('Joke'); setYesVisibleAlert(false);}}\r\n                        style={[styles.overBtn, {marginLeft:5}]}\r\n                    >\r\n                        <Text style={[styles.overBtnTxt, {paddingHorizontal:20}]}>Yes</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </Overlay>\r\n            <Overlay isVisible={yesVisibleAlert}>\r\n                <Text style={{lineHeight:1.8, fontSize:26, fontWeight:\"500\",paddingVertical:20, paddingTop:30, paddingBottom:15, textAlign:'center'}}>Yay!</Text>\r\n                <Text style={{paddingTop:5,paddingBottom:10, textAlign:'center', fontSize:18, fontWeight:\"400\"}}>\r\n                    Hope you have a nice day! 😊\r\n                </Text>\r\n                <Text style={{ fontSize: 14, paddingBottom:20}}>\r\n                    Do you want to hear a joke?\r\n                </Text>\r\n\r\n                <View style={{display:'flex',flexDirection:'row', justifyContent:'space-between'}}>\r\n                    <TouchableOpacity\r\n                        onPress={() => {RootNavigation.navigate('Home'); setNoVisibleAlert(false);}}\r\n                        style={[styles.overBtn, {marginRight:5}]}\r\n                    >\r\n                        <Text style={styles.overBtnTxt}>Close</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        onPress={() => {RootNavigation.navigate('Joke'); setYesVisibleAlert(false);}}\r\n                        style={[styles.overBtn, {marginLeft:5}]}\r\n                    >\r\n                        <Text style={[styles.overBtnTxt]}>Yes</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </Overlay>\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    btn: {\r\n        flex:1,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop:20,\r\n        width:150,\r\n        alignSelf:'center',\r\n        borderWidth:5,\r\n        borderColor:'#ff5c5c',\r\n        shadowColor: \"black\",\r\n        backgroundColor:'#ff5c5c',\r\n    },\r\n    btnTxt: {\r\n        fontSize: 28,\r\n        paddingVertical:10,\r\n        paddingHorizontal:20,\r\n        fontWeight:\"700\",\r\n        color:'#fff'\r\n    },\r\n    question: {\r\n        color:'#fff',\r\n        fontSize:20,\r\n        marginTop:10,\r\n        fontWeight:\"600\"\r\n    },\r\n    overBtn: {   \r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        backgroundColor:'#ff5c5c',\r\n        flex:1,\r\n        paddingVertical:15,\r\n        marginTop:6,\r\n\r\n    },\r\n    overBtnTxt: {\r\n        color:'#ffff',\r\n        fontWeight:\"600\",\r\n        fontSize:22,\r\n\r\n    }\r\n});","import React from \"react\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nimport ResultFeedback from \"../components/ResultFeedback\";\r\nimport BgImg from \"../components/BgImg\";\r\n\r\nexport default function ActivityResult({route, navigation}) {\r\n\r\n  //// Results from last page\r\n  /// \r\n  const {accessibility} = route.params;\r\n  const {people} = route.params;\r\n  const {money} = route.params;\r\n  // Convert to readable value/the exact string required for the endpoint later\r\n  const participants = JSON.stringify(people).replace( /^\\D+/g, '').slice(0,-2);\r\n  const value = JSON.stringify(accessibility).replace( /^\\D+/g, '').slice(0,-1);\r\n  const pay = JSON.stringify(money).replace( /^\\D+/g, '').slice(0,-2);\r\n\r\n  //// API\r\n  const [error, setError] = useState(null); \r\n  const [isLoaded, setIsLoaded] = useState(false); \r\n  const [dataResult, setDataResult] = useState([]);\r\n\r\n  /// First fetch\r\n  useEffect(() => { \r\n    // Fetch results according to number of participants, range of pay, and range of accessibility\r\n    fetch('http://www.boredapi.com/api/activity?participants=' + \r\n          participants + \r\n          '&?minprice=0&maxprice=' + pay + \r\n          '&?minaccessibility=0&maxaccessibility=' + value) \r\n      .then(res => res.json()) \r\n      .then( \r\n        (result) => { \r\n          setIsLoaded(true); \r\n          setDataResult(result); \r\n        }, \r\n        (error) => { \r\n          setIsLoaded(true); \r\n          setError(error); \r\n        } \r\n      ) \r\n  }, []);\r\n  return(\r\n      <View style={styles.container}>\r\n        <BgImg />\r\n          {displayActivity(error, isLoaded, dataResult, navigation)}         \r\n      </View>\r\n  );\r\n}\r\n\r\nfunction displayActivity(error, isLoaded, dataResult, navigation) {\r\n  if (error) {\r\n    return (\r\n      <View>\r\n        <Text>Error: {error.message}</Text>\r\n      </View>\r\n    );\r\n  }\r\n  else if (!isLoaded) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n        <ActivityIndicator size=\"large\" color=\"#d63131\" />\r\n      </View>\r\n    );\r\n  }\r\n  else if (dataResult === undefined) {\r\n    return (\r\n      <View>\r\n        <Text>No records found for search</Text>\r\n      </View>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <View style={{width:'90%'}}>\r\n        <View style={styles.activityContainer}>\r\n          <Text style={styles.activity}>{dataResult.activity}</Text>\r\n        </View>\r\n        <ResultFeedback />  \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      alignItems:'center',\r\n    },\r\n    activity: {\r\n      fontSize:25,\r\n      fontWeight:\"600\",\r\n      alignSelf:'center'\r\n    },\r\n    activityContainer: {\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      alignItems:'center',\r\n      justifyContent:'center',\r\n      backgroundColor:'#ffd0d0',\r\n      padding:30,\r\n      marginTop:50,\r\n      marginBottom:10\r\n    }\r\n  });","import React, { useState } from 'react'\r\nimport { View, StyleSheet, Text, TouchableOpacity } from 'react-native'\r\nimport SelectBox from 'react-native-multi-selectbox'\r\nimport { xorBy } from 'lodash'\r\nimport BgImg from '../components/BgImg'\r\n\r\n // Genres data\r\n const type = [\r\n  {\r\n    item: 'Programming',\r\n    id: 'PRGRM',\r\n  },\r\n  {\r\n    item: 'Dark',\r\n    id: 'DRK',\r\n  },\r\n  {\r\n    item: 'Pun',\r\n    id: 'PUN',\r\n  },\r\n  {\r\n    item: 'Spooky',\r\n    id: 'SPKY',\r\n  },\r\n  {\r\n    item: 'Miscellaneous',\r\n    id: 'MISC',\r\n  },\r\n  {\r\n    item: 'Any',\r\n    id: 'ANY',\r\n  }]\r\n\r\n // Blacklists data\r\n const banned = [\r\n  {\r\n    item: 'Racist',\r\n    id: 'RCST',\r\n  },\r\n  {\r\n    item: 'Sexist',\r\n    id: 'SXST',\r\n  },\r\n  {\r\n    item: 'Political',\r\n    id: 'PLTL',\r\n  },\r\n  {\r\n    item: 'Religious',\r\n    id: 'RLG',\r\n  },\r\n  {\r\n    item: 'NSFW',\r\n    id: 'NSFW',\r\n  }]\r\n\r\n\r\nexport default function Joke({navigation}) {\r\n\r\n  // Store array of selected genres and blacklisted categories\r\n  const [genres, setGenres] = useState([]);\r\n  const [blacklisted, setBlacklisted] = useState([]);\r\n\r\n  //// xorBy(arrays, iteratee) <- iteratee (filtering criteria) is invoked on each individual array. \r\n  /// In this case, if the item selected matches the id from the array, add that item to the array.\r\n  // Selected options are stored in their arrays\r\n  function onGenreChange() {\r\n    return (item) => setGenres(xorBy(genres, [item], 'id'))\r\n  }\r\n  function onBlacklistChange() {\r\n    return (item) => setBlacklisted(xorBy(blacklisted, [item], 'id'))\r\n}\r\n  return(\r\n    <View style={styles.container}>\r\n      <BgImg />\r\n\r\n        <View style={styles.select}>\r\n          <SelectBox\r\n            options={type}\r\n            selectedValues={genres}\r\n            inputPlaceholder=\"Select\"\r\n            label=\"What kind of jokes do you like?*\"\r\n            onMultiSelect={onGenreChange()}\r\n            onTapClose={onGenreChange()}\r\n            isMulti\r\n            hideInputFilter\r\n            containerStyle={{backgroundColor:'#fff', paddingBottom:20, paddingLeft:10}}\r\n            labelStyle={{fontSize:18, fontWeight:\"600\", paddingLeft:10, color:'#000', backgroundColor:'#fff', paddingTop:20}}\r\n            multiListEmptyLabelStyle={{fontSize:14, paddingLeft:10}}\r\n            multiOptionContainerStyle={{backgroundColor:'#ff5c5c'}}\r\n            arrowIconColor=\"#ff5c5c\"\r\n            searchIconColor=\"#ff5c5c\"\r\n            toggleIconColor=\"#ff5c5c\"\r\n            optionsLabelStyle={{fontSize:16, paddingLeft:10}}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.select}>\r\n          <SelectBox\r\n            options={banned}\r\n            selectedValues={blacklisted}\r\n            inputPlaceholder=\"Select\"\r\n            label=\"What jokes do you not want to see?\"\r\n            onMultiSelect={onBlacklistChange()}\r\n            onTapClose={onBlacklistChange()}\r\n            labelStyle={{fontSize:18, fontWeight:\"600\",  color:'#000', paddingTop:20,backgroundColor:'#fff', paddingLeft:10}}\r\n            hideInputFilter\r\n            containerStyle={{backgroundColor:'#fff', paddingBottom:20}}\r\n            isMulti\r\n            multiOptionContainerStyle={{backgroundColor:'#ff5c5c'}}\r\n            multiListEmptyLabelStyle={{fontSize:14, paddingLeft:10}}\r\n            arrowIconColor=\"#ff5c5c\"\r\n            searchIconColor=\"#ff5c5c\"\r\n            toggleIconColor=\"#ff5c5c\"\r\n            optionsLabelStyle={{fontSize:16}}\r\n          />\r\n        </View>\r\n\r\n        <TouchableOpacity \r\n          onPress={()=>navigation.navigate(\r\n            'JokeResult', {\r\n              type:{genres}, \r\n              banned:{blacklisted}})}\r\n            style={styles.btn}>\r\n          <Text style={styles.btnTxt}>Submit</Text>\r\n        </TouchableOpacity>\r\n      </View>   \r\n    );\r\n}\r\nconst styles= StyleSheet.create({\r\n  container: {\r\n    flex:1\r\n  },\r\n  btn: {\r\n    flex:1,\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    marginTop:20,\r\n    width:180,\r\n    maxHeight:80,\r\n    alignSelf:'center',\r\n    borderWidth:5,\r\n    borderColor:'#ff5c5c',\r\n    shadowColor: \"black\",\r\n    backgroundColor:'#ff5c5c',\r\n  },\r\n  btnTxt: {\r\n    fontSize: 28,\r\n    paddingVertical:10,\r\n    paddingHorizontal:20,\r\n    fontWeight:\"700\",\r\n    color:'#fff'\r\n  }, \r\n  select: {\r\n    marginTop:20, \r\n    marginBottom:20, \r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    paddingHorizontal:20}\r\n});","import { useEffect, useState } from \"react\";\r\nimport { Text, View, ActivityIndicator, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport BgImg from \"../components/BgImg\";\r\n\r\nexport default function JokeResult({route,navigation}) {\r\n\r\n  // Arrays of selected options passed from previous screen\r\n  const {type} = route.params;\r\n  const {banned} = route.params;\r\n  \r\n  // Sorry this is a mess my brain was struggling\r\n\r\n  // Stringify the params passed  \r\n  // Returns key: array of selected items\r\n  // Ex; {\"genres\":[{\"item\":\"Programming\",\"id\":\"PRGRM\"},{\"item\":\"Dark\",\"id\":\"DRK\"}]}\r\n  var genre = JSON.stringify(type);\r\n  var blacklist = JSON.stringify(banned);\r\n\r\n  // Parse\r\n  // Ex; [0: [{ item: 'Programming', id: 'PRGRM' }] 1: [{ item: 'Dark', id: 'DRK' }]]\r\n  genre = (JSON.parse(genre)).genres;\r\n  blacklist = (JSON.parse(blacklist)).blacklisted;\r\n\r\n  // Grab just the values from the objects\r\n  // Ex; { item: 'Programming', id: 'PRGRM' } { item: 'Dark', id: 'DRK' }\r\n  var category = Object.values(genre);\r\n  var exclude = Object.values(blacklist);\r\n\r\n  var categories=\"\";\r\n  var excluded=\"\";\r\n  // Object.entries() returns array of the object's props\r\n  // [[\"0\", { item: 'Programming', id: 'PRGRM' }], [\"0\", { item: 'Dark', id: 'DRK' }]]\r\n  Object.entries(category);\r\n  Object.entries(exclude);\r\n\r\n  // Iterate through the loop and concatenate a comma before each of the item values in order to get the correct syntax for the fetch endpoints later\r\n  // categories = \",Programming,Dark\"\r\n  for (var i = 0, len = category.length; i < len; i++) {\r\n      categories += \",\"+[category[i].item]\r\n  }\r\n  for (var i = 0, len = exclude.length; i < len; i++) {\r\n      excluded += \",\"+[exclude[i].item]\r\n  }\r\n\r\n  // Remove the first comma from the string  \r\n  // categories = \"Programming,Dark\"\r\n  categories = categories.substring(1);\r\n  excluded= excluded.substring(1);\r\n\r\n  const [error, setError] = useState(null); \r\n  const [isLoaded, setIsLoaded] = useState(false); \r\n  const [dataResult, setDataResult] = useState([]);\r\n\r\n  // Second fetch\r\n  // List of joke categories to include and exclude\r\n  useEffect(() => { \r\n    fetch('https://v2.jokeapi.dev/joke/' + \r\n          categories + \r\n          '?blacklistFlags=' + excluded) \r\n      .then(res => res.json()) \r\n      .then( \r\n        (result) => { \r\n          setIsLoaded(true); \r\n          setDataResult(result); \r\n        }, \r\n        (error) => { \r\n          setIsLoaded(true); \r\n          setError(error); \r\n        } \r\n      ) \r\n  }, []);\r\n\r\n  return(\r\n    <View style={styles.container}>\r\n      <BgImg />\r\n      {displayJoke(error, isLoaded, dataResult, navigation)}      \r\n    </View>\r\n  );\r\n}\r\n\r\nfunction displayJoke(error, isLoaded, dataResult, navigation) {\r\n\r\n  if (error) {\r\n    return (\r\n      <View>\r\n        <Text h3>Error: Can't generate joke.</Text>\r\n        <Text>Please choose at least one category in the previous page.</Text>\r\n      </View>\r\n    );\r\n  }\r\n  else if (!isLoaded) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n        <ActivityIndicator size=\"large\" color=\"#ff5c5c\" />\r\n      </View>\r\n    );\r\n  }\r\n  else if (dataResult === undefined) {\r\n    return (\r\n      <View>\r\n        <Text>Sorry!</Text>\r\n        <Text>No jokes have been found with those filters!</Text>\r\n      </View>\r\n    );\r\n  }\r\n  else if (dataResult === null) {\r\n    return (\r\n      <View>\r\n        <Text>Sorry!</Text>\r\n        <Text>No jokes have been found with those filters!</Text>\r\n      </View>\r\n    );\r\n  }\r\nelse {\r\n  return (\r\n      <View style={styles.result}>\r\n        <Text h1 style={styles.txtBox}>{dataResult.setup}</Text>\r\n        <Text h1 style={styles.txtBox}>{dataResult.delivery}</Text> \r\n        <TouchableOpacity style={styles.btn} onPress={()=>navigation.navigate('Activity')} >\r\n                <Text style={styles.btnTxt}>Start over</Text>\r\n        </TouchableOpacity>   \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\nbtn: {\r\n  display:'flex',\r\n  flexDirection:'column',\r\n  alignItems:'center',\r\n  justifyContent:'center',\r\n  marginTop:10,\r\n  width:200,\r\n  alignSelf:'center',\r\n  borderWidth:5,\r\n  borderColor:'#ff5c5c',\r\n  shadowColor: \"black\",\r\n  backgroundColor:'#ff5c5c',\r\n},\r\nbtnTxt: {\r\n    fontSize: 36,\r\n    padding:10,\r\n    fontWeight:\"700\",\r\n    color:'#fff'\r\n},\r\ncontainer: {\r\n  fontSize:20\r\n},\r\ntxtBox: {\r\n  fontSize:25,\r\n  fontWeight:\"600\",\r\n  alignSelf:'center',\r\n  display:'flex',\r\n  flexDirection:'column',\r\n  alignItems:'center',\r\n  justifyContent:'center',\r\n  backgroundColor:'#ffd0d0',\r\n  padding:30,\r\n  marginTop:10,\r\n  marginBottom:10\r\n},\r\nresult: {\r\n  marginHorizontal: 30,\r\n  marginTop:40,\r\n  \r\n}\r\n\r\n});","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { navigationRef } from './RootNavigation';\nimport * as RootNavigation from './RootNavigation'\nimport { View, TouchableOpacity, Image } from 'react-native';\n\n// Screens\nimport Activity from './screens/Activity';\nimport Home from './screens/Home';\nimport ActivityResult from './screens/ActivityResult';\nimport Joke from './screens/Joke';\nimport JokeResult from './screens/JokeResult';\n\n\nconst Stack = createStackNavigator();\n\nconst logoImg = {uri: \"https://i.ibb.co/Rv18tvW/logo.png\"}\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer ref={navigationRef}>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" component={Home} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n          },}} />\n          <Stack.Screen name=\"Activity\" component={Activity} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n            },\n            headerTintColor: '#fff'}} />\n          <Stack.Screen name=\"ActivityResult\" component={ActivityResult} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n          },\n          headerTintColor: '#fff'}} />\n          <Stack.Screen name=\"Joke\" component={Joke} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n            },headerTintColor: '#fff'}} />\n          <Stack.Screen name=\"JokeResult\" component={JokeResult} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n            },headerTintColor: '#fff'}} />\n        </Stack.Navigator>\n\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n\nfunction LogoTitle() {\n  return (\n    <View>\n          <TouchableOpacity onPress={() => RootNavigation.navigate('Home')}  style={{paddingTop:10, paddingBottom:10}}>\n              <Image source={logoImg} alt=\"bored app logo\" className=\"logo\" style={{width:200,height:100, resizeMode:'contain', paddingTop:10}} />\n          </TouchableOpacity>\n      </View>\n  );\n}"],"sourceRoot":""}