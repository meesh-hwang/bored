{"version":3,"sources":["RootNavigation.js","screens/Activity.js","themes/mainTheme.js","screens/Home.js","components/ResultFeedback.js","screens/ActivityResult.js","screens/Joke.js","screens/JokeResult.js","App.js"],"names":["navigationRef","createNavigationContainerRef","navigate","name","params","isReady","Activity","route","navigation","useState","value","setValue","participants","setParticipants","pay","setPay","View","style","styles","container","Text","h1","display","flex","flexDirection","justifyContent","alignItems","TouchableOpacity","onPress","height","width","backgroundColor","padding","Button","people","title","toFixed","onValueChange","minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","RadioButton","Group","newValue","Item","label","accessibility","money","StyleSheet","create","themePalette","mainTheme","buttonStyle","raised","borderRadius","titleStyle","color","icon","type","h1Style","fontWeight","fontSize","h2Style","margin","h3Style","Home","theme","noVisibleAlert","setNoVisibleAlert","yesVisibleAlert","setYesVisibleAlert","isVisible","h3","RootNavigation","window","location","reload","ActivityResult","JSON","stringify","replace","slice","error","setError","isLoaded","setIsLoaded","dataResult","setDataResult","useEffect","fetch","then","res","json","result","displayActivity","message","undefined","activity","ResultFeedback","ActivityIndicator","size","item","id","banned","Joke","genres","setGenres","blacklisted","setBlacklisted","onGenreChange","xorBy","onBlacklistChange","options","selectedValues","onMultiSelect","onTapClose","isMulti","JokeResult","genre","parse","categories","category","Object","values","entries","i","len","length","substring","blacklist","excluded","exclude","displayJoke","setup","delivery","Stack","createStackNavigator","createBottomTabNavigator","App","NavigationContainer","ref","Navigator","Screen","component"],"mappings":"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","file":"static/js/app.3e0c217b.chunk.js","sourcesContent":["import { createNavigationContainerRef } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createNavigationContainerRef()\r\n\r\nexport function navigate(name, params) {\r\n  if (navigationRef.isReady()) {\r\n    navigationRef.navigate(name, params);\r\n  }\r\n}","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { View, Text, Button, StyleSheet,TouchableOpacity } from \"react-native\";\r\nimport Slider from '@react-native-community/slider';\r\nimport { RadioButton } from 'react-native-paper';\r\n\r\nexport default function Activity({route, navigation}) {\r\n    const [value, setValue] = useState(0);\r\n    const [participants, setParticipants] = useState(1);\r\n    const [pay, setPay] = useState(0);\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <View>\r\n                <Text h1>How many people will be participating?</Text>\r\n                <View style={{display:'flex', flex:1, flexDirection:'row',justifyContent:'center', alignItems:'center'}}>\r\n                    <TouchableOpacity\r\n                        onPress={() =>{\r\n                            if(participants <= 1){\r\n                                setParticipants(participants + 0);\r\n                            }else{\r\n                                setParticipants(participants -1);\r\n                            };}}\r\n                        style={{height:30,width:30,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',backgroundColor:'#fff'}}\r\n                    >\r\n                        <Text>-</Text>\r\n                    </TouchableOpacity>\r\n                    <Text style={{padding:15}}>{participants}</Text>\r\n                    <TouchableOpacity\r\n                        onPress={() =>setParticipants(participants+1)}\r\n                        style={{height:30,width:30,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center', backgroundColor:'#fff'}}\r\n                    >\r\n                        <Text>+</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                    <Button\r\n                    onPress={()=>navigation.navigate('Accessibility',{ people: {participants}})}    \r\n                    title=\"Next\"\r\n                    />\r\n            </View>\r\n            <View>\r\n                <Text>How accessible do you need the activity to be?</Text>\r\n                <Text>(Physical limitations, equipment, travel-time, etc.)</Text>\r\n                <View>\r\n                    <Text>{(value*10).toFixed(1)}/10</Text>\r\n                    <Slider\r\n                    onValueChange={value => setValue(value)}\r\n                    style={{width: 200, height: 40}}\r\n                    minimumValue={0}\r\n                    maximumValue={1}\r\n                    minimumTrackTintColor=\"black\"\r\n                    maximumTrackTintColor=\"grey\"\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <View>\r\n                <Text>Are you okay with spending money?</Text>\r\n                <RadioButton.Group onValueChange={newValue => setPay(newValue)} value={pay}>\r\n                    <RadioButton.Item value=\"1\" label=\"Yes\"/>\r\n              \r\n                    <RadioButton.Item value=\"0\" label=\"No\" />\r\n            \r\n                </RadioButton.Group>\r\n            </View>\r\n\r\n            <Button\r\n                onPress={()=>navigation.navigate('ActivityResult', {accessibility:{value}, people:{participants}, money:{pay}})}    \r\n                title=\"Let's go\"\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n  });","const themePalette ={\r\n    primary:'#ded000',\r\n    primaryDarker:'#ded000',\r\n    primaryLighter:'#ded000',\r\n    alternate:'#ded000'\r\n}\r\n\r\nexport const mainTheme = {\r\n\r\nButton: {\r\n    buttonStyle: {\r\n        raised: true,\r\n        borderRadius: 60,\r\n        backgroundColor: themePalette.primary,\r\n    },\r\n    titleStyle: {\r\n        color: themePalette.alternate,\r\n\r\n    },\r\n    icon:{\r\n        color: themePalette.alternate,            \r\n    },\r\n    type: 'clear'\r\n},\r\nText: { \r\n    h1Style: { \r\n      color: themePalette.primaryDarker, \r\n      fontWeight: 'bold', \r\n      fontWeight: 'normal', \r\n      fontSize: 100, \r\n    }, \r\n    h2Style: { \r\n      color: themePalette.primaryLighter, \r\n      fontWeight: 'normal', \r\n      fontSize: 26, \r\n      margin:10 \r\n    }, \r\n    h3Style: { \r\n      color: themePalette.primaryLighter, \r\n      fontWeight: 'normal', \r\n      fontSize: 20, \r\n      margin:5 \r\n    }, \r\n    style:{ \r\n      margin:5,             \r\n    } \r\n\r\n  },\r\n\r\n};","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { ThemeProvider, Text, Button } from 'react-native-elements';\r\nimport { mainTheme } from '../themes/mainTheme';\r\n\r\nexport default function Home({navigation}) {\r\n\r\n    return(\r\n        <ThemeProvider theme={mainTheme}> \r\n            <View style={styles.container}>\r\n                <Button\r\n                    onPress={()=>navigation.navigate('Activity')}    \r\n                    title=\"Start\"\r\n                />\r\n                <Text h1>Hi its Meesh</Text>\r\n            </View>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n  });","import { useState } from \"react\";\r\nimport { Text, Button, Overlay, FAB, Icon } from \"react-native-elements\";\r\nimport { View } from \"react-native\";\r\nimport * as RootNavigation from '../RootNavigation';\r\n\r\nexport default function() {\r\n    const [noVisibleAlert, setNoVisibleAlert] = useState(false);\r\n    const [yesVisibleAlert, setYesVisibleAlert] = useState(false);\r\n    return(\r\n        <View>\r\n            <Button \r\n                title=\"Yes\"\r\n                onPress={()=> setYesVisibleAlert(true)}\r\n            />\r\n            <Button \r\n                title=\"No\"\r\n                onPress={()=> setNoVisibleAlert(true)}\r\n            />\r\n\r\n            <Overlay isVisible={noVisibleAlert} >\r\n                <Text h3>Sorry!</Text>\r\n\r\n                <Text>\r\n                    Do you want to hear a joke instead?\r\n                </Text>\r\n\r\n                <View style={{display:'flex',flexDirection:'row'}}>\r\n                    <Button\r\n                        title=\"Back to Start\"\r\n                        onPress={() => {RootNavigation.navigate('Home'); setNoVisibleAlert(false);}}\r\n                    />\r\n                    <Button\r\n                        title=\"Yes\"\r\n                        onPress={() => {RootNavigation.navigate('Joke'); setNoVisibleAlert(false);}}\r\n                    />\r\n                </View>\r\n            </Overlay>\r\n\r\n            <Overlay isVisible={yesVisibleAlert} >\r\n                <Text h3>Yay!</Text>\r\n\r\n                <Text>\r\n                    Hope you have a nice day! 😊\r\n                </Text>\r\n\r\n                <View style={{display:'flex',flexDirection:'row'}}>\r\n                    <Button\r\n                        title=\"Close\"\r\n                        onPress={() => {RootNavigation.navigate('Home'); window.location.reload();}}\r\n                    />\r\n                </View>\r\n            </Overlay>\r\n        </View>\r\n    );\r\n}","import React from \"react\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nimport ResultFeedback from \"../components/ResultFeedback\";\r\n\r\nexport default function ActivityResult({route, navigation}) {\r\n    const {accessibility} = route.params;\r\n    const {people} = route.params;\r\n    const {money} = route.params;\r\n    const participants = JSON.stringify(people).replace( /^\\D+/g, '').slice(0,-2);\r\n    const value = JSON.stringify(accessibility).replace( /^\\D+/g, '').slice(0,-1);\r\n    const pay = JSON.stringify(money).replace( /^\\D+/g, '').slice(0,-2);\r\n    const [error, setError] = useState(null); \r\n    const [isLoaded, setIsLoaded] = useState(false); \r\n    const [dataResult, setDataResult] = useState([]);\r\n\r\n    useEffect(() => { \r\n        fetch('http://www.boredapi.com/api/activity?participants=' + participants + '&?minprice=0&maxprice=' + pay + '&?minaccessibility=0&maxaccessibility=' + value) \r\n          .then(res => res.json()) \r\n          .then( \r\n            (result) => { \r\n              // successful load \r\n              setIsLoaded(true); \r\n              setDataResult(result); \r\n            }, \r\n            (error) => { \r\n              // handle errors here \r\n              setIsLoaded(true); \r\n              setError(error); \r\n            } \r\n          ) \r\n      }, []);\r\n\r\n    return(\r\n        <View>\r\n            {displayActivity(error, isLoaded, dataResult, navigation)}         \r\n        </View>\r\n    );\r\n}\r\nfunction displayActivity(error, isLoaded, dataResult, navigation) {\r\n\r\n\r\n    if (error) {\r\n      return (\r\n        <View>\r\n          <Text>Error: {error.message}</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else if (!isLoaded) {\r\n      return (\r\n        <View>\r\n          <Text>Loading...</Text>\r\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        </View>\r\n      );\r\n    }\r\n    else if (dataResult === undefined) {\r\n      return (\r\n        <View>\r\n          <Text>No records found for search</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <View>\r\n            <Text h1>{dataResult.activity}</Text>\r\n\r\n            <Text>Are you happy with this result?</Text>\r\n            <ResultFeedback />\r\n            \r\n        </View>\r\n      );\r\n    }\r\n  }\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n  });","import React, { useState } from 'react'\r\nimport { Text, View } from 'react-native'\r\nimport SelectBox from 'react-native-multi-selectbox'\r\nimport { xorBy } from 'lodash'\r\nimport { Button } from 'react-native'\r\n\r\n // Genres\r\n const type = [\r\n  {\r\n    item: 'Programming',\r\n    id: 'PRGRM',\r\n  },\r\n  {\r\n    item: 'Dark',\r\n    id: 'DRK',\r\n  },\r\n  {\r\n    item: 'Pun',\r\n    id: 'PUN',\r\n  },\r\n  {\r\n    item: 'Spooky',\r\n    id: 'SPKY',\r\n  },\r\n  {\r\n    item: 'Miscellaneous',\r\n    id: 'MISC',\r\n  },\r\n  {\r\n    item: 'Any',\r\n    id: 'ANY',\r\n  }]\r\n\r\n // Blacklists\r\n const banned = [\r\n  {\r\n    item: 'Racist',\r\n    id: 'RCST',\r\n  },\r\n  {\r\n    item: 'Sexist',\r\n    id: 'SXST',\r\n  },\r\n  {\r\n    item: 'Political',\r\n    id: 'PLTL',\r\n  },\r\n  {\r\n    item: 'Religious',\r\n    id: 'RLG',\r\n  },\r\n  {\r\n    item: 'NSFW',\r\n    id: 'NSFW',\r\n  }]\r\n\r\n\r\nexport default function Joke({navigation}) {\r\n  const [genres, setGenres] = useState([]);\r\n  const [blacklisted, setBlacklisted] = useState([]);\r\n\r\n  function onGenreChange() {\r\n    return (item) => setGenres(xorBy(genres, [item], 'id'))\r\n  }\r\n\r\n  function onBlacklistChange() {\r\n    return (item) => setBlacklisted(xorBy(blacklisted, [item], 'id'))\r\n  }\r\n\r\n\r\n    return(\r\n      \r\n        <View>\r\n          <View>\r\n            <Text h1>What kind of jokes do you like?</Text> \r\n            <SelectBox\r\n              options={type}\r\n              selectedValues={genres}\r\n              onMultiSelect={onGenreChange()}\r\n              onTapClose={onGenreChange()}\r\n              isMulti\r\n            />\r\n          </View>\r\n\r\n          <View>\r\n            <Text h1>What kind of jokes do you not want to see?</Text> \r\n            <SelectBox\r\n              options={banned}\r\n              selectedValues={blacklisted}\r\n              onMultiSelect={onBlacklistChange()}\r\n              onTapClose={onBlacklistChange()}\r\n              isMulti\r\n            />\r\n          </View>\r\n          <Button title='Submit' onPress={()=>navigation.navigate('JokeResult',{type:{genres}, banned:{blacklisted}})}/>\r\n        </View>   \r\n      );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Text, View, ActivityIndicator, Button } from \"react-native\";\r\n\r\n\r\nexport default function JokeResult({route,navigation}) {\r\n    const {type} = route.params;\r\n    const {banned} = route.params;\r\n    const [error, setError] = useState(null); \r\n    const [isLoaded, setIsLoaded] = useState(false); \r\n    const [dataResult, setDataResult] = useState([]);\r\n    \r\n\r\n    var genre = JSON.stringify(type);\r\n    genre = (JSON.parse(genre)).genres;\r\n    var categories=\"\";\r\n    var category = Object.values(genre);\r\n    Object.entries(category);\r\n    for (var i = 0, len = category.length; i < len; i++) {\r\n        categories += \",\"+[category[i].item]\r\n    }\r\n    categories = categories.substring(1);\r\n\r\n    var blacklist = JSON.stringify(banned);\r\n    blacklist = (JSON.parse(blacklist)).blacklisted;\r\n    var excluded=\"\";\r\n    var exclude = Object.values(blacklist);\r\n    Object.entries(exclude);\r\n        for (var i = 0, len = exclude.length; i < len; i++) {\r\n            excluded += \",\"+[exclude[i].item]\r\n        }\r\n    excluded= excluded.substring(1);\r\n\r\n    useEffect(() => { \r\n        fetch('https://v2.jokeapi.dev/joke/' + categories + '?blacklistFlags=' + excluded) \r\n          .then(res => res.json()) \r\n          .then( \r\n            (result) => { \r\n              // successful load \r\n              setIsLoaded(true); \r\n              setDataResult(result); \r\n            }, \r\n            (error) => { \r\n              // handle errors here \r\n              setIsLoaded(true); \r\n              setError(error); \r\n            } \r\n          ) \r\n      }, []);\r\n\r\n    return(\r\n        <View>\r\n            {displayJoke(error, isLoaded, dataResult, navigation)}         \r\n        </View>\r\n    );\r\n}\r\n\r\nfunction displayJoke(error, isLoaded, dataResult, navigation) {\r\n\r\n\r\n    if (error) {\r\n      return (\r\n        <View>\r\n          <Text>Error: {error.message}</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else if (!isLoaded) {\r\n      return (\r\n        <View>\r\n          <Text>Loading...</Text>\r\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        </View>\r\n      );\r\n    }\r\n    else if (dataResult === undefined) {\r\n      return (\r\n        <View>\r\n          <Text>No records found for search</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <View>\r\n            <Text h1>{dataResult.setup}</Text>\r\n            <Text h1>{dataResult.delivery}</Text>\r\n            <Button title=\"Start over\" onPress={()=>navigation.navigate('Home')} />\r\n        </View>\r\n      );\r\n    }\r\n  }","import { StatusBar } from 'expo-status-bar';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { navigationRef } from './RootNavigation';\n\n// Screens\nimport Activity from './screens/Activity';\nimport Home from './screens/Home';\nimport ActivityResult from './screens/ActivityResult';\nimport Joke from './screens/Joke';\nimport JokeResult from './screens/JokeResult';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer ref={navigationRef}>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" component={Home} />\n          <Stack.Screen name=\"Activity\" component={Activity} />\n          <Stack.Screen name=\"ActivityResult\" component={ActivityResult} />\n          <Stack.Screen name=\"Joke\" component={Joke} />\n          <Stack.Screen name=\"JokeResult\" component={JokeResult} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}"],"sourceRoot":""}