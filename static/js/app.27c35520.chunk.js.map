{"version":3,"sources":["RootNavigation.js","components/BgImg.js","screens/Activity.js","screens/Home.js","components/ResultFeedback.js","screens/ActivityResult.js","screens/Joke.js","screens/JokeResult.js","App.js"],"names":["navigationRef","createNavigationContainerRef","navigate","name","params","isReady","bgImg","uri","BgImg","Image","source","style","styles","StyleSheet","create","position","minWidth","minHeight","resizeMode","zIndex","Activity","route","navigation","useState","value","setValue","participants","setParticipants","pay","setPay","View","container","qBox","marginTop","Text","display","flex","flexDirection","justifyContent","alignItems","TouchableOpacity","onPress","height","width","backgroundColor","padding","fontSize","toFixed","onValueChange","minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","RadioButton","Group","newValue","Item","label","color","accessibility","people","money","btn","btnTxt","paddingHorizontal","alignSelf","borderWidth","borderColor","shadowColor","fontWeight","borderRadius","marginVertical","Home","whiteBox","boredBox","bored","questionBox","question","margin","maxWidth","marginLeft","marginBottom","noVisibleAlert","setNoVisibleAlert","yesVisibleAlert","setYesVisibleAlert","title","marginRight","isVisible","h3","RootNavigation","overBtn","overBtnTxt","window","location","reload","paddingVertical","ActivityResult","JSON","stringify","replace","slice","error","setError","isLoaded","setIsLoaded","dataResult","setDataResult","useEffect","fetch","then","res","json","result","displayActivity","message","undefined","activityContainer","activity","ResultFeedback","ActivityIndicator","size","type","item","id","banned","Joke","genres","setGenres","blacklisted","setBlacklisted","onGenreChange","xorBy","onBlacklistChange","options","selectedValues","inputPlaceholder","onMultiSelect","onTapClose","isMulti","hideInputFilter","labelStyle","paddingLeft","multiListEmptyLabelStyle","multiOptionContainerStyle","arrowIconColor","searchIconColor","toggleIconColor","optionsLabelStyle","JokeResult","genre","parse","categories","category","Object","values","entries","i","len","length","substring","blacklist","excluded","exclude","displayJoke","h1","setup","delivery","Button","Stack","createStackNavigator","logoImg","LogoTitle","paddingTop","paddingBottom","alt","className","App","NavigationContainer","ref","Navigator","Screen","component","headerTitleAlign","headerTitle","props","headerStyle","headerTintColor"],"mappings":"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","file":"static/js/app.27c35520.chunk.js","sourcesContent":["import { createNavigationContainerRef } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createNavigationContainerRef()\r\n\r\nexport function navigate(name, params) {\r\n  if (navigationRef.isReady()) {\r\n    navigationRef.navigate(name, params);\r\n  }\r\n}","\r\nimport { StyleSheet, Image} from \"react-native\";\r\n\r\nconst bgImg = {uri: \"https://i.ibb.co/jRhR5gH/bg.jpg\"}\r\n\r\nexport default function BgImg() {\r\n    return(\r\n        <Image source={bgImg} style={styles.bgImg} />\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    bgImg: {\r\n        position:'absolute',\r\n        minWidth:'100vw',\r\n        minHeight:'100vh',\r\n        resizeMode:'cover',\r\n        zIndex:0\r\n    },\r\n})","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { View, Text, StyleSheet,TouchableOpacity } from \"react-native\";\r\nimport Slider from '@react-native-community/slider';\r\nimport { RadioButton } from 'react-native-paper';\r\nimport BgImg from \"../components/BgImg\";\r\n\r\n\r\nexport default function Activity({route, navigation}) {\r\n    const [value, setValue] = useState(0);\r\n    const [participants, setParticipants] = useState(1);\r\n    const [pay, setPay] = useState(0);\r\n\r\n    return(\r\n        <View>\r\n        <BgImg />\r\n        <View style={styles.container}>\r\n\r\n            <View style={[styles.qBox, {marginTop:'5vh'}]}>\r\n                <Text>How many people will be participating?</Text>\r\n                <View style={{display:'flex', flex:1, flexDirection:'row',justifyContent:'center', alignItems:'center'}}>\r\n                    <TouchableOpacity\r\n                        onPress={() =>{\r\n                            if(participants <= 1){\r\n                                setParticipants(participants + 0);\r\n                            }else{\r\n                                setParticipants(participants -1);\r\n                            };}}\r\n                        style={{height:30,width:30,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',backgroundColor:'#fff'}}\r\n                    >\r\n                        <Text>-</Text>\r\n                    </TouchableOpacity>\r\n                    <Text style={{padding:15}}>{participants}</Text>\r\n                    <TouchableOpacity\r\n                        onPress={() =>setParticipants(participants+1)}\r\n                        style={{height:30,width:30,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center', backgroundColor:'#fff'}}\r\n                    >\r\n                        <Text>+</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.qBox}>\r\n                <Text>How accessible do you need the activity to be?</Text>\r\n                <Text style={{fontSize:10}}>(Physical limitations, equipment, travel-time, etc.)</Text>\r\n                <View style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                    <Text style={{marginTop:10}}>{(value*10).toFixed(1)}/10</Text>\r\n                    <Slider\r\n                    onValueChange={value => setValue(value)}\r\n                    style={{width: 200, height: 40}}\r\n                    minimumValue={0}\r\n                    maximumValue={1}\r\n                    minimumTrackTintColor=\"#ff5c5c\"\r\n                    maximumTrackTintColor=\"#fcba03\"\r\n                    thumbTintColor=\"#d63131\"\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.qBox}>\r\n                <Text>Are you okay with spending money?</Text>\r\n                <RadioButton.Group onValueChange={newValue => setPay(newValue)} value={pay}>\r\n                    <RadioButton.Item value=\"1\" label=\"Yes\" color=\"#ff5c5c\" />\r\n              \r\n                    <RadioButton.Item value=\"0\" label=\"No\" color=\"#fcba03\" />\r\n            \r\n                </RadioButton.Group>\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n                onPress={()=>navigation.navigate('ActivityResult', {accessibility:{value}, people:{participants}, money:{pay}})} \r\n                style={styles.btn}\r\n            >\r\n                <Text style={styles.btnTxt}>Continue</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingHorizontal:20\r\n    },\r\n    btn: {\r\n        flex:1,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop:'5vh',\r\n        width:'50vw',\r\n        height:'10vh',\r\n        alignSelf:'center',\r\n        borderWidth:5,\r\n        borderColor:'#ff5c5c',\r\n        shadowColor: \"black\",\r\n        backgroundColor:'#ff5c5c',\r\n    },\r\n    btnTxt: {\r\n        fontSize: '7vw',\r\n        padding:10,\r\n        fontWeight:\"700\",\r\n        color:'#fff'\r\n    },\r\n    qBox: {\r\n        backgroundColor:'#ffd0d0',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        padding:20,\r\n        minWidth:'fit-content',\r\n        borderRadius:20,\r\n        marginVertical:5\r\n    }\r\n  });","import React from \"react\";\r\nimport { View, StyleSheet,Text, TouchableOpacity } from \"react-native\";\r\nimport BgImg from \"../components/BgImg\";\r\n\r\nexport default function Home({navigation}) {\r\n\r\n    return(\r\n            <View style={styles.container}>\r\n                <BgImg />\r\n                <View>\r\n                    <View style={[styles.whiteBox, styles.boredBox]}>\r\n                        <Text style={styles.bored}>Bored?</Text>\r\n                    </View>\r\n\r\n                    <View style={[styles.whiteBox, styles.questionBox]}>\r\n                        <Text style={styles.question}>Don't know what to do?</Text>\r\n                    </View>\r\n\r\n                        <TouchableOpacity\r\n                            onPress={()=>navigation.navigate('Activity')} \r\n                            style={styles.btn}>\r\n                            <Text style={styles.btnTxt}>Start</Text>\r\n                        </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor:'#ffd0d0',\r\n    },\r\n    bored: {\r\n        fontSize:\"5vw\",\r\n        margin:10,\r\n        color:'#d63131'\r\n\r\n    },\r\n    question:{\r\n        fontSize:'4vw',\r\n        marginVertical:40,\r\n        color:'#d63131'\r\n    },\r\n    whiteBox: {\r\n        backgroundColor:'#ffd0d0',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        padding:30,\r\n        maxWidth:'fit-content',\r\n        borderRadius:'50%'\r\n    },\r\n    questionBox:{\r\n        marginTop:'6vh',\r\n        borderColor:'#d63131',\r\n        marginLeft:\"10vw\",\r\n        marginBottom:'3vh',\r\n        borderWidth:1\r\n    },\r\n    boredBox: {\r\n        marginLeft:'50vw',\r\n        borderColor:'#d63131',\r\n        marginTop:'10vh',\r\n        borderWidth:1\r\n    },\r\n    btn: {\r\n        flex:1,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop:'12vh',\r\n        width:'50vw',\r\n        alignSelf:'center',\r\n        borderWidth:5,\r\n        borderColor:'#ff5c5c',\r\n        shadowColor: \"black\",\r\n        backgroundColor:'#ff5c5c',\r\n    },\r\n    btnTxt: {\r\n        fontSize: '7vw',\r\n        padding:10,\r\n        fontWeight:\"700\",\r\n        color:'#fff'\r\n    }\r\n\r\n\r\n  });","import { useState } from \"react\";\r\nimport { Text, Overlay, FAB, Icon } from \"react-native-elements\";\r\nimport { TouchableOpacity,StyleSheet } from \"react-native\";\r\nimport { View } from \"react-native\";\r\nimport * as RootNavigation from '../RootNavigation';\r\n\r\nexport default function() {\r\n    const [noVisibleAlert, setNoVisibleAlert] = useState(false);\r\n    const [yesVisibleAlert, setYesVisibleAlert] = useState(false);\r\n    return(\r\n        <View style={{marginTop:'6vh'}}>\r\n          <Text style={styles.question}>Are you happy with this result?</Text>\r\n\r\n            <View style={{display:'flex', flexDirection:'row', justifyContent:'space-between',}}>\r\n                <TouchableOpacity \r\n                    title=\"Yes\"\r\n                    onPress={()=> setYesVisibleAlert(true)}\r\n                    style={[styles.btn,{width:'7vw', marginRight:7}]}\r\n                >\r\n                    <Text style={styles.btnTxt}>Yes</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity \r\n                    title=\"No\"\r\n                    onPress={()=> setNoVisibleAlert(true)}\r\n                    style={[styles.btn,{width:'7vw', marginRight:7}]}\r\n                >\r\n                    <Text style={styles.btnTxt}>No</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <Overlay isVisible={noVisibleAlert} >\r\n                <Text h3>Sorry!</Text>\r\n\r\n                <Text>\r\n                    Do you want to hear a joke instead?\r\n                </Text>\r\n\r\n                <View style={{display:'flex',flexDirection:'row', justifyContent:'space-between'}}>\r\n                    <TouchableOpacity\r\n                        title=\"Back to Start\"\r\n                        onPress={() => {RootNavigation.navigate('Home'); setNoVisibleAlert(false);}}\r\n                        style={styles.overBtn}\r\n                    >\r\n                        <Text style={styles.overBtnTxt}>Back to Start</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        title=\"Yes\"\r\n                        onPress={() => {RootNavigation.navigate('Joke'); setNoVisibleAlert(false);}}\r\n                        style={styles.overBtn}\r\n                    >\r\n                        <Text style={[styles.overBtnTxt, {paddingHorizontal:20}]}>Yes</Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </Overlay>\r\n\r\n            <Overlay isVisible={yesVisibleAlert} >\r\n                <Text h3>Yay!</Text>\r\n\r\n                <Text>\r\n                    Hope you have a nice day! 😊\r\n                </Text>\r\n\r\n                <View style={{display:'flex',flexDirection:'row'}}>\r\n                    <TouchableOpacity\r\n                        title=\"Close\"\r\n                        onPress={() => {RootNavigation.navigate('Home'); window.location.reload();}}\r\n                        style={styles.overBtn}\r\n                    >\r\n                        <Text style={styles.overBtnTxt}>Close</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </Overlay>\r\n        </View>\r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    btn: {\r\n        flex:1,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        marginTop:'2vh',\r\n        width:'50vw',\r\n        alignSelf:'center',\r\n        borderWidth:5,\r\n        borderColor:'#ff5c5c',\r\n        shadowColor: \"black\",\r\n        backgroundColor:'#ff5c5c',\r\n    },\r\n    btnTxt: {\r\n        fontSize: '7vw',\r\n        padding:10,\r\n        fontWeight:\"700\",\r\n        color:'#ffff',\r\n    },\r\n    question: {\r\n        color:'#fff',\r\n        fontSize:20,\r\n        marginTop:'7vh',\r\n        fontWeight:600\r\n    },\r\n    overBtn: {   \r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        backgroundColor:'#ff5c5c',\r\n        width:'fit-content',\r\n        paddingHorizontal:10,\r\n        paddingVertical:15,\r\n        marginTop:'2vh',\r\n\r\n    },\r\n    overBtnTxt: {\r\n        color:'#ffff',\r\n        fontWeight:\"600\",\r\n        fontSize:'5vw',\r\n\r\n    },\r\n\r\n});","import React from \"react\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nimport ResultFeedback from \"../components/ResultFeedback\";\r\nimport BgImg from \"../components/BgImg\";\r\n\r\nexport default function ActivityResult({route, navigation}) {\r\n    const {accessibility} = route.params;\r\n    const {people} = route.params;\r\n    const {money} = route.params;\r\n    const participants = JSON.stringify(people).replace( /^\\D+/g, '').slice(0,-2);\r\n    const value = JSON.stringify(accessibility).replace( /^\\D+/g, '').slice(0,-1);\r\n    const pay = JSON.stringify(money).replace( /^\\D+/g, '').slice(0,-2);\r\n    const [error, setError] = useState(null); \r\n    const [isLoaded, setIsLoaded] = useState(false); \r\n    const [dataResult, setDataResult] = useState([]);\r\n\r\n    useEffect(() => { \r\n        fetch('http://www.boredapi.com/api/activity?participants=' + participants + '&?minprice=0&maxprice=' + pay + '&?minaccessibility=0&maxaccessibility=' + value) \r\n          .then(res => res.json()) \r\n          .then( \r\n            (result) => { \r\n              // successful load \r\n              setIsLoaded(true); \r\n              setDataResult(result); \r\n            }, \r\n            (error) => { \r\n              // handle errors here \r\n              setIsLoaded(true); \r\n              setError(error); \r\n            } \r\n          ) \r\n      }, []);\r\n\r\n    return(\r\n      <View>\r\n        <BgImg />\r\n        <View style={styles.container}>\r\n            {displayActivity(error, isLoaded, dataResult, navigation)}         \r\n        </View>\r\n      </View>\r\n    );\r\n}\r\nfunction displayActivity(error, isLoaded, dataResult, navigation) {\r\n\r\n\r\n    if (error) {\r\n      return (\r\n        <View>\r\n          <Text>Error: {error.message}</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else if (!isLoaded) {\r\n      return (\r\n        <View>\r\n          <Text>Loading...</Text>\r\n          <ActivityIndicator size=\"large\" color=\"#d63131\" />\r\n        </View>\r\n      );\r\n    }\r\n    else if (dataResult === undefined) {\r\n      return (\r\n        <View>\r\n          <Text>No records found for search</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <View>\r\n          <View style={styles.activityContainer}>\r\n            <Text style={styles.activity}>{dataResult.activity}</Text>\r\n          </View>\r\n            <ResultFeedback />\r\n            \r\n        </View>\r\n      );\r\n    }\r\n  }\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingHorizontal:20,\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      alignItems:'center',\r\n      justifyContent:'center'\r\n    },\r\n    activity: {\r\n      fontSize:25,\r\n      fontWeight:600,\r\n      alignSelf:'center'\r\n    },\r\n    activityContainer: {\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      alignItems:'center',\r\n      justifyContent:'center',\r\n      backgroundColor:'#ffd0d0',\r\n      padding:30,\r\n      marginTop:'8vh',\r\n      marginBottom:'5vh'\r\n    }\r\n  });","import React, { useState } from 'react'\r\nimport { Text, View } from 'react-native'\r\nimport SelectBox from 'react-native-multi-selectbox'\r\nimport { xorBy } from 'lodash'\r\nimport { TouchableOpacity, StyleSheet } from 'react-native'\r\n\r\n\r\n // Genres\r\n const type = [\r\n  {\r\n    item: 'Programming',\r\n    id: 'PRGRM',\r\n  },\r\n  {\r\n    item: 'Dark',\r\n    id: 'DRK',\r\n  },\r\n  {\r\n    item: 'Pun',\r\n    id: 'PUN',\r\n  },\r\n  {\r\n    item: 'Spooky',\r\n    id: 'SPKY',\r\n  },\r\n  {\r\n    item: 'Miscellaneous',\r\n    id: 'MISC',\r\n  },\r\n  {\r\n    item: 'Any',\r\n    id: 'ANY',\r\n  }]\r\n\r\n // Blacklists\r\n const banned = [\r\n  {\r\n    item: 'Racist',\r\n    id: 'RCST',\r\n  },\r\n  {\r\n    item: 'Sexist',\r\n    id: 'SXST',\r\n  },\r\n  {\r\n    item: 'Political',\r\n    id: 'PLTL',\r\n  },\r\n  {\r\n    item: 'Religious',\r\n    id: 'RLG',\r\n  },\r\n  {\r\n    item: 'NSFW',\r\n    id: 'NSFW',\r\n  }]\r\n\r\n\r\nexport default function Joke({navigation}) {\r\n  const [genres, setGenres] = useState([]);\r\n  const [blacklisted, setBlacklisted] = useState([]);\r\n\r\n  function onGenreChange() {\r\n    return (item) => setGenres(xorBy(genres, [item], 'id'))\r\n  }\r\n\r\n  function onBlacklistChange() {\r\n    return (item) => setBlacklisted(xorBy(blacklisted, [item], 'id'))\r\n  }\r\n\r\n\r\n    return(\r\n      \r\n        <View style={{display:'flex',flexDirection:'column',justifyContent:'center', alignItems:'center'}}>\r\n          <View style={{marginTop:'10vh', marginBottom:'10vh'}}>\r\n            <SelectBox\r\n              width=\"100vw\"\r\n              options={type}\r\n              selectedValues={genres}\r\n              inputPlaceholder=\"Select\"\r\n              label=\"What kind of jokes do you like?\"\r\n              onMultiSelect={onGenreChange()}\r\n              onTapClose={onGenreChange()}\r\n              isMulti\r\n              hideInputFilter\r\n              labelStyle={{fontSize:18, fontWeight:600, paddingLeft:10, color:'#000'}}\r\n              multiListEmptyLabelStyle={{fontSize:14, paddingLeft:10}}\r\n              multiOptionContainerStyle={{backgroundColor:'#ff5c5c'}}\r\n              arrowIconColor=\"#ff5c5c\"\r\n              searchIconColor=\"#ff5c5c\"\r\n              toggleIconColor=\"#ff5c5c\"\r\n              optionsLabelStyle={{fontSize:16, paddingLeft:10}}\r\n            />\r\n          </View>\r\n\r\n          <View>\r\n            <SelectBox\r\n              width=\"100vw\"\r\n              options={banned}\r\n              selectedValues={blacklisted}\r\n              inputPlaceholder=\"Select\"\r\n              label=\"What jokes do you not want to see?\"\r\n              onMultiSelect={onBlacklistChange()}\r\n              onTapClose={onBlacklistChange()}\r\n              labelStyle={{fontSize:18, fontWeight:600, paddingLeft:10, color:'#000'}}\r\n              hideInputFilter\r\n              isMulti\r\n              multiOptionContainerStyle={{backgroundColor:'#ff5c5c'}}\r\n              multiListEmptyLabelStyle={{fontSize:14, paddingLeft:10}}\r\n              arrowIconColor=\"#ff5c5c\"\r\n              searchIconColor=\"#ff5c5c\"\r\n              toggleIconColor=\"#ff5c5c\"\r\n              optionsLabelStyle={{fontSize:16, paddingLeft:10}}\r\n            />\r\n          </View>\r\n          <TouchableOpacity onPress={()=>navigation.navigate('JokeResult',{type:{genres}, banned:{blacklisted}})}\r\n          style={styles.btn}>\r\n            <Text style={styles.btnTxt}>Submit</Text>\r\n          </TouchableOpacity>\r\n        </View>   \r\n      );\r\n}\r\nconst styles= StyleSheet.create({\r\n\r\n  btn: {\r\n    flex:1,\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    marginTop:'5vh',\r\n    width:'50vw',\r\n    height:'10vh',\r\n    alignSelf:'center',\r\n    borderWidth:5,\r\n    borderColor:'#ff5c5c',\r\n    shadowColor: \"black\",\r\n    backgroundColor:'#ff5c5c',\r\n  },\r\n  btnTxt: {\r\n    fontSize: '7vw',\r\n    padding:10,\r\n    fontWeight:\"700\",\r\n    color:'#fff'\r\n},\r\n\r\n});","import { useEffect, useState } from \"react\";\r\nimport { Text, View, ActivityIndicator, Button } from \"react-native\";\r\n\r\n\r\nexport default function JokeResult({route,navigation}) {\r\n    const {type} = route.params;\r\n    const {banned} = route.params;\r\n    const [error, setError] = useState(null); \r\n    const [isLoaded, setIsLoaded] = useState(false); \r\n    const [dataResult, setDataResult] = useState([]);\r\n    \r\n\r\n    var genre = JSON.stringify(type);\r\n    genre = (JSON.parse(genre)).genres;\r\n    var categories=\"\";\r\n    var category = Object.values(genre);\r\n    Object.entries(category);\r\n    for (var i = 0, len = category.length; i < len; i++) {\r\n        categories += \",\"+[category[i].item]\r\n    }\r\n    categories = categories.substring(1);\r\n\r\n    var blacklist = JSON.stringify(banned);\r\n    blacklist = (JSON.parse(blacklist)).blacklisted;\r\n    var excluded=\"\";\r\n    var exclude = Object.values(blacklist);\r\n    Object.entries(exclude);\r\n        for (var i = 0, len = exclude.length; i < len; i++) {\r\n            excluded += \",\"+[exclude[i].item]\r\n        }\r\n    excluded= excluded.substring(1);\r\n\r\n    useEffect(() => { \r\n        fetch('https://v2.jokeapi.dev/joke/' + categories + '?blacklistFlags=' + excluded) \r\n          .then(res => res.json()) \r\n          .then( \r\n            (result) => { \r\n              // successful load \r\n              setIsLoaded(true); \r\n              setDataResult(result); \r\n            }, \r\n            (error) => { \r\n              // handle errors here \r\n              setIsLoaded(true); \r\n              setError(error); \r\n            } \r\n          ) \r\n      }, []);\r\n\r\n    return(\r\n        <View>\r\n            {displayJoke(error, isLoaded, dataResult, navigation)}         \r\n        </View>\r\n    );\r\n}\r\n\r\nfunction displayJoke(error, isLoaded, dataResult, navigation) {\r\n\r\n\r\n    if (error) {\r\n      return (\r\n        <View>\r\n          <Text>Error: {error.message}</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else if (!isLoaded) {\r\n      return (\r\n        <View>\r\n          <Text>Loading...</Text>\r\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        </View>\r\n      );\r\n    }\r\n    else if (dataResult === undefined) {\r\n      return (\r\n        <View>\r\n          <Text>No records found for search</Text>\r\n        </View>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <View>\r\n            <Text h1>{dataResult.setup}</Text>\r\n            <Text h1>{dataResult.delivery}</Text>\r\n            <Button title=\"Start over\" onPress={()=>navigation.navigate('Home')} />\r\n        </View>\r\n      );\r\n    }\r\n  }","import { StatusBar } from 'expo-status-bar';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { navigationRef } from './RootNavigation';\nimport { View, TouchableOpacity, Image } from 'react-native';\n\n// Screens\nimport Activity from './screens/Activity';\nimport Home from './screens/Home';\nimport ActivityResult from './screens/ActivityResult';\nimport Joke from './screens/Joke';\nimport JokeResult from './screens/JokeResult';\n\n\nconst Stack = createStackNavigator();\n\nconst logoImg = {uri: \"https://i.ibb.co/Rv18tvW/logo.png\"}\n\n  function LogoTitle() {\n    return (\n      <View>\n            <TouchableOpacity onPress={() => RootNavigation.navigate('Home')}  style={{paddingTop:10, paddingBottom:10}}>\n                <Image source={logoImg} alt=\"Hwang's Kitchen\" className=\"logo\" style={{width:'50vw',height:100, resizeMode:'contain', paddingTop:10}} />\n            </TouchableOpacity>\n        </View>\n    );\n  }\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer ref={navigationRef}>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" component={Home} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n          },}} />\n          <Stack.Screen name=\"Activity\" component={Activity} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n            },\n            headerTintColor: '#fff'}} />\n          <Stack.Screen name=\"ActivityResult\" component={ActivityResult} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n          },\n          headerTintColor: '#fff'}} />\n          <Stack.Screen name=\"Joke\" component={Joke} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n            },headerTintColor: '#fff'}} />\n          <Stack.Screen name=\"JokeResult\" component={JokeResult} options=\n          {{\n            headerTitleAlign: 'center',\n            headerTitle: (props) => <LogoTitle {...props} />, \n            headerStyle: {\n            backgroundColor: '#ff5c5c',\n            },headerTintColor: '#fff'}} />\n        </Stack.Navigator>\n\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}"],"sourceRoot":""}